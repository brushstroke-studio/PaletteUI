---
import DocsLayout from "@/layouts/DocsLayout.astro";
import { RegistryLoader } from "@/components/ui/registry-component-loader";
import registryData from "@/registry/registry-data.json";

// This function generates all possible routes based on components in the registry
export async function getStaticPaths() {
  // Create a path for each component in the registry
  const paths = registryData.components.map((component) => ({
    params: { component: component.id },
    props: { componentData: component },
  }));
  
  return paths;
}

// Receive the component data from getStaticPaths
const { componentData } = Astro.props;
const { component } = Astro.params;

// Fallback in case component is undefined (shouldn't happen with getStaticPaths)
const componentId = component || "";

// Format the component name for the title
const title = componentData.name || 
  componentId
    .split("-")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");
---

<DocsLayout
  title={`${title} - Palette UI`}
  description={componentData.description || `Documentation for the ${title} component in Palette UI`}
>
  <RegistryLoader client:load componentId={componentId} initialData={componentData} />
</DocsLayout>
